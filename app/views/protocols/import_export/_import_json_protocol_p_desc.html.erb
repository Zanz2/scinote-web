<div style="display: block;">
    <hr>
    <td>
      <div class="badge-num">
        <span class="badge-preview bg-primary size-digit-1">
          <b data-val="position"><%= 1 %></b>
        </span>
        &nbsp; &nbsp;
        <span class="step-panel-collapse-link" data-toggle="collapse">
          <span class="glyphicon collapse-step-icon glyphicon-collapse-up"></span>
          <strong data-val="name"><%= 'Protocol info' %></strong>
        </span>
      </div>
      <br>
  <div class="tab-content">
    <div class="tab-pane active" role="tabpanel">
      <div data-val="description" class="ql-editor">
        <br>
        <% prot_info_string = '' %>
        <% @remaining = 10000 %>
        <% protocol_table_elements_array = [] %>
        <% if json_object['description'].present? %>
          <% prot_info_string += (json_object['description']) %>
          <strong><%= t('protocols.protocols_io_import.preview.prot_desc') %></strong>
          <% description = pio_eval_p_desc_len(sanitize_input(string_html_table_remove(json_object['description']))) %>
          <%= description.html_safe %><br>
        <% end %>
        <% if json_object['before_start'].present? %>
          <% prot_info_string += (json_object['before_start']) %>
          <strong><%= t('protocols.protocols_io_import.preview.b_s_p') %></strong>
          <% before_start = pio_eval_p_bfrandsafe_len(sanitize_input(string_html_table_remove(json_object['before_start']))) %>
          <%= before_start.html_safe %><br>
        <% end %>
        <% if json_object['warning'].present? %>
          <% prot_info_string += (json_object['warning']) %>
          <strong><%= t('protocols.protocols_io_import.preview.warn') %></strong>
          <% sft_warning = pio_eval_p_bfrandsafe_len(sanitize_input(string_html_table_remove(json_object['warning']))) %>
          <%= sft_warning.html_safe%><br>
        <% end %>
        <% if json_object['guidelines'].present? %>
          <% prot_info_string += (json_object['guidelines']) %>
          <strong><%= t('protocols.protocols_io_import.preview.guideln') %></strong>
          <% guidelines = pio_eval_p_guid_len(sanitize_input(string_html_table_remove(json_object['guidelines']))) %>
          <%= guidelines.html_safe %><br>
        <% end %>
        <% if json_object['manuscript_citation'].present? %>
          <% prot_info_string += (json_object['manuscript_citation']) %>
          <strong><%= t('protocols.protocols_io_import.preview.manu_cit') %></strong>
          <% manu_cit = sanitize_input(string_html_table_remove(json_object['manuscript_citation'])) %>
          <%= manu_cit.html_safe %><br>
        <% end %>
        <% if json_object['publish_date'].present? %>
          <strong><%= t('protocols.protocols_io_import.preview.pbl_date') %></strong>
          <% pbl_date = pio_eval_p_pbldate_len(sanitize_input(json_object['publish_date'])) %>
          <%= pbl_date.html_safe %><br>
        <% end %>
        <% if json_object['vendor_name'].present? %>
          <strong><%= t('protocols.protocols_io_import.preview.vnd_name') %></strong>
          <% vnd_name = pio_eval_p_misc_vnd_link_len(sanitize_input(json_object['vendor_name'])) %>
          <%= vnd_name.html_safe %><br>
        <% end %>
        <% if json_object['vendor_link'].present? %>
          <strong><%= t('protocols.protocols_io_import.preview.vnd_link') %></strong>
          <% vnd_link = pio_eval_p_misc_vnd_link_len(sanitize_input(json_object['vendor_link'])) %>
          <%= vnd_link.html_safe %><br>
        <% end %>
        <% if json_object['keywords'].present? %>
          <strong><%= t('protocols.protocols_io_import.preview.key_wrd') %></strong>
          <% keywords = pio_eval_p_keywords_tags_len(sanitize_input(json_object['keywords'])) %>
          <%= keywords.html_safe %><br>
        <% end %>
        <% if json_object['tags'].present? %>
          <strong><%= t('protocols.protocols_io_import.preview.tags') %></strong>
          <% string_of_tags='' %>
          <%  json_object['tags'].each do |tag| %>
            <% string_of_tags += tag['tag_name']+' , ' %><br>
          <% end %>
          <% tags = pio_eval_p_keywords_tags_len(sanitize_input(string_of_tags))%>
          <%= tags.html_safe %>
        <% end %>
        <% if json_object['link'].present? %>
          <strong><%= t('protocols.protocols_io_import.preview.p_link') %></strong>
          <% link = pio_eval_p_misc_vnd_link_len(sanitize_input(json_object['link']).html_safe) %>
          <%= link.html_safe %><br>
        <% end %>
        <% tables, garbage = protocolsio_string_to_table_element(prot_info_string) %>
        <% if tables.present? %>
          <br><hr><br>
          <% end %>
          <% table_count = 0 %>
          <% tables.each do |index, table| %>
          <%   table_hash = JSON.parse((Base64.decode64(table['contents']))) %>
          <%   pio_table_id = "pio_table_prot_info_"+table_count.to_s %>
          <%   protocol_table_elements_array.push([pio_table_id,table_hash['data']]) %>
          <div id="<%=pio_table_id%>" ></div>
          <%   table_count += 1 %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
$('#modal-import-json-protocol-preview').on('shown.bs.modal', function (e) {
  var javascript_table_elements_p = <%=raw sanitize_input(protocol_table_elements_array.to_json) %>
  for(var j=0;j<javascript_table_elements_p.length;j++)
  {

  var target = document.getElementById(javascript_table_elements_p[j][0]);
  var hot = new Handsontable(target, {
    data: javascript_table_elements_p[j][1],
    startRows: <%= Constants::HANDSONTABLE_INIT_ROWS_CNT %>,
    startCols: <%= Constants::HANDSONTABLE_INIT_COLS_CNT %>,
    rowHeaders: true,
    colHeaders: true,
    fillHandle: false,
    formulas: true,
    readOnly: true
  });
}
})

</script>
